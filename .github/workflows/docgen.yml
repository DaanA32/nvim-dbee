name: Documentation Generation

on:
  push:
    tags-ignore:
      # ignore all tags
      - '**'
    branches:
      # run for all branches
      - '**'

jobs:
  readme-docs:
    runs-on: ubuntu-22.04
    name: Generate Docs from Readme
    env:
      TEMP_README: "__temp_readme.md"
    steps:
      - uses: actions/checkout@v3
      - name: Prepare markdown file
        run: |
          TEMP_CONFIG="$(mktemp)"
          # Retrieve default config and put it in a temp file.
          {
            echo '```lua'
            awk '/DOCGEN_END/{f=0} f; /DOCGEN_START/{f=1}' lua/dbee/config.lua
            echo '```'
          } > "$TEMP_CONFIG"
          # Insert the default config between DOCGEN_CONFIG tags in the README.
          # And remove stuff between DOCGEN_IGNORE_START and DOCGEN_IGNORE_END tags from README.
          {
            sed -e '
              /DOCGEN_CONFIG_START/,/DOCGEN_CONFIG_END/!b
              /DOCGEN_CONFIG_START/r '"$TEMP_CONFIG"'
              /DOCGEN_CONFIG_END:/!d
            ' <(sed '/DOCGEN_IGNORE_START/,/DOCGEN_IGNORE_END/d' README.md)
            cat ARCHITECTURE.md
          } > "$TEMP_README"
      - name: Generate vimdoc
        uses: kdheepak/panvimdoc@v3.0.6
        with:
          vimdoc: dbee
          pandoc: "${{ env.TEMP_README }}"
          toc: true
          description: "Database Client for NeoVim"
          treesitter: true
          ignorerawblocks: true
          docmappingprojectname: false
      - name: Commit the Generated Help
        uses: EndBug/add-and-commit@v9
        if: github.event_name == 'push'
        with:
          add: doc/dbee.txt
          author_name: Github Actions
          author_email: actions@github.com
          message: "[docgen] Update doc/dbee.txt"
          pull: --rebase --autostash

  api-docs:
    name: Generate Docs for API
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-22.04
            url: https://github.com/neovim/neovim/releases/download/nightly/nvim-linux64.tar.gz
    steps:
      - uses: actions/checkout@v3
      - run: date +%F > todays-date
      - name: Restore cache for today's nightly.
        uses: actions/cache@v3
        with:
          path: _neovim
          key: ${{ runner.os }}-${{ matrix.url }}-${{ hashFiles('todays-date') }}
      - name: Prepare
        run: |
          test -d _neovim || {
            mkdir -p _neovim
            curl -sL "${{ matrix.url }}" | tar xzf - --strip-components=1 -C "${PWD}/_neovim"
          }
          mkdir -p ~/.local/share/nvim/site/pack/vendor/start
          git clone --depth 1 https://github.com/nvim-lua/plenary.nvim ~/.local/share/nvim/site/pack/vendor/start/plenary.nvim
          git clone https://github.com/tjdevries/tree-sitter-lua ~/.local/share/nvim/site/pack/vendor/start/tree-sitter-lua
          ln -s "$(pwd)" ~/.local/share/nvim/site/pack/vendor/start
      - name: Build parser
        run: |
          # We have to build the parser every single time to keep up with parser changes
          cd ~/.local/share/nvim/site/pack/vendor/start/tree-sitter-lua
          git checkout 86f74dfb69c570f0749b241f8f5489f8f50adbea
          make dist
          cd -
      - name: Generating docs
        run: |
          export PATH="${PWD}/_neovim/bin:${PATH}"
          export VIM="${PWD}/_neovim/share/nvim/runtime"
          nvim --version
          nvim --headless --noplugin -u scripts/minimal_init.vim -c "luafile ./scripts/gendocs.lua" -c 'qa'
      - name: Commit the Generated Docs
        uses: EndBug/add-and-commit@v9
        if: github.event_name == 'push'
        with:
          add: doc/dbee-api.txt
          author_name: Github Actions
          author_email: actions@github.com
          message: "[docgen] Update doc/dbee-api.txt"
          pull: --rebase --autostash
